// Generated by view binder compiler. Do not edit!
package com.kryp70nnime.apps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.exoplayer2.ui.PlayerView;
import com.kryp70nnime.apps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.webilisim.webplayer.WEBPlayerStd;

public final class ActivityWatchAnimeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout animeLinear;

  @NonNull
  public final PlayerView playerView;

  @NonNull
  public final TextView watchAnimeEpisode;

  @NonNull
  public final WEBPlayerStd watchAnimePlayer;

  @NonNull
  public final TextView watchAnimeTitle;

  @NonNull
  public final WebView watchAnimeWeb;

  private ActivityWatchAnimeBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout animeLinear, @NonNull PlayerView playerView,
      @NonNull TextView watchAnimeEpisode, @NonNull WEBPlayerStd watchAnimePlayer,
      @NonNull TextView watchAnimeTitle, @NonNull WebView watchAnimeWeb) {
    this.rootView = rootView;
    this.animeLinear = animeLinear;
    this.playerView = playerView;
    this.watchAnimeEpisode = watchAnimeEpisode;
    this.watchAnimePlayer = watchAnimePlayer;
    this.watchAnimeTitle = watchAnimeTitle;
    this.watchAnimeWeb = watchAnimeWeb;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWatchAnimeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWatchAnimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_watch_anime, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWatchAnimeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animeLinear;
      LinearLayout animeLinear = ViewBindings.findChildViewById(rootView, id);
      if (animeLinear == null) {
        break missingId;
      }

      id = R.id.playerView;
      PlayerView playerView = ViewBindings.findChildViewById(rootView, id);
      if (playerView == null) {
        break missingId;
      }

      id = R.id.watchAnimeEpisode;
      TextView watchAnimeEpisode = ViewBindings.findChildViewById(rootView, id);
      if (watchAnimeEpisode == null) {
        break missingId;
      }

      id = R.id.watchAnimePlayer;
      WEBPlayerStd watchAnimePlayer = ViewBindings.findChildViewById(rootView, id);
      if (watchAnimePlayer == null) {
        break missingId;
      }

      id = R.id.watchAnimeTitle;
      TextView watchAnimeTitle = ViewBindings.findChildViewById(rootView, id);
      if (watchAnimeTitle == null) {
        break missingId;
      }

      id = R.id.watchAnimeWeb;
      WebView watchAnimeWeb = ViewBindings.findChildViewById(rootView, id);
      if (watchAnimeWeb == null) {
        break missingId;
      }

      return new ActivityWatchAnimeBinding((ConstraintLayout) rootView, animeLinear, playerView,
          watchAnimeEpisode, watchAnimePlayer, watchAnimeTitle, watchAnimeWeb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
