// Generated by view binder compiler. Do not edit!
package com.kryp70nnime.apps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.button.MaterialButton;
import com.kryp70nnime.apps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInformationBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView animeGenreDetail;

  @NonNull
  public final TextView animeSynopsisDetail;

  @NonNull
  public final TextView animeTotalEps;

  @NonNull
  public final TextView animeTotalEpsDetail;

  @NonNull
  public final MaterialButton buttonFavorite;

  @NonNull
  public final TextView releaseDateAnime;

  @NonNull
  public final ShimmerFrameLayout shimmerDescInfo;

  @NonNull
  public final TextView statusAnime;

  private FragmentInformationBinding(@NonNull FrameLayout rootView,
      @NonNull TextView animeGenreDetail, @NonNull TextView animeSynopsisDetail,
      @NonNull TextView animeTotalEps, @NonNull TextView animeTotalEpsDetail,
      @NonNull MaterialButton buttonFavorite, @NonNull TextView releaseDateAnime,
      @NonNull ShimmerFrameLayout shimmerDescInfo, @NonNull TextView statusAnime) {
    this.rootView = rootView;
    this.animeGenreDetail = animeGenreDetail;
    this.animeSynopsisDetail = animeSynopsisDetail;
    this.animeTotalEps = animeTotalEps;
    this.animeTotalEpsDetail = animeTotalEpsDetail;
    this.buttonFavorite = buttonFavorite;
    this.releaseDateAnime = releaseDateAnime;
    this.shimmerDescInfo = shimmerDescInfo;
    this.statusAnime = statusAnime;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animeGenreDetail;
      TextView animeGenreDetail = ViewBindings.findChildViewById(rootView, id);
      if (animeGenreDetail == null) {
        break missingId;
      }

      id = R.id.animeSynopsisDetail;
      TextView animeSynopsisDetail = ViewBindings.findChildViewById(rootView, id);
      if (animeSynopsisDetail == null) {
        break missingId;
      }

      id = R.id.animeTotalEps;
      TextView animeTotalEps = ViewBindings.findChildViewById(rootView, id);
      if (animeTotalEps == null) {
        break missingId;
      }

      id = R.id.animeTotalEpsDetail;
      TextView animeTotalEpsDetail = ViewBindings.findChildViewById(rootView, id);
      if (animeTotalEpsDetail == null) {
        break missingId;
      }

      id = R.id.buttonFavorite;
      MaterialButton buttonFavorite = ViewBindings.findChildViewById(rootView, id);
      if (buttonFavorite == null) {
        break missingId;
      }

      id = R.id.releaseDateAnime;
      TextView releaseDateAnime = ViewBindings.findChildViewById(rootView, id);
      if (releaseDateAnime == null) {
        break missingId;
      }

      id = R.id.shimmerDescInfo;
      ShimmerFrameLayout shimmerDescInfo = ViewBindings.findChildViewById(rootView, id);
      if (shimmerDescInfo == null) {
        break missingId;
      }

      id = R.id.statusAnime;
      TextView statusAnime = ViewBindings.findChildViewById(rootView, id);
      if (statusAnime == null) {
        break missingId;
      }

      return new FragmentInformationBinding((FrameLayout) rootView, animeGenreDetail,
          animeSynopsisDetail, animeTotalEps, animeTotalEpsDetail, buttonFavorite, releaseDateAnime,
          shimmerDescInfo, statusAnime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
