// Generated by view binder compiler. Do not edit!
package com.kryp70nnime.apps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.tabs.TabLayout;
import com.kryp70nnime.apps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TrackSelectionDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button trackSelectionDialogCancelButton;

  @NonNull
  public final Button trackSelectionDialogOkButton;

  @NonNull
  public final TabLayout trackSelectionDialogTabLayout;

  @NonNull
  public final ViewPager trackSelectionDialogViewPager;

  private TrackSelectionDialogBinding(@NonNull LinearLayout rootView,
      @NonNull Button trackSelectionDialogCancelButton,
      @NonNull Button trackSelectionDialogOkButton,
      @NonNull TabLayout trackSelectionDialogTabLayout,
      @NonNull ViewPager trackSelectionDialogViewPager) {
    this.rootView = rootView;
    this.trackSelectionDialogCancelButton = trackSelectionDialogCancelButton;
    this.trackSelectionDialogOkButton = trackSelectionDialogOkButton;
    this.trackSelectionDialogTabLayout = trackSelectionDialogTabLayout;
    this.trackSelectionDialogViewPager = trackSelectionDialogViewPager;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TrackSelectionDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TrackSelectionDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.track_selection_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TrackSelectionDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.track_selection_dialog_cancel_button;
      Button trackSelectionDialogCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (trackSelectionDialogCancelButton == null) {
        break missingId;
      }

      id = R.id.track_selection_dialog_ok_button;
      Button trackSelectionDialogOkButton = ViewBindings.findChildViewById(rootView, id);
      if (trackSelectionDialogOkButton == null) {
        break missingId;
      }

      id = R.id.track_selection_dialog_tab_layout;
      TabLayout trackSelectionDialogTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (trackSelectionDialogTabLayout == null) {
        break missingId;
      }

      id = R.id.track_selection_dialog_view_pager;
      ViewPager trackSelectionDialogViewPager = ViewBindings.findChildViewById(rootView, id);
      if (trackSelectionDialogViewPager == null) {
        break missingId;
      }

      return new TrackSelectionDialogBinding((LinearLayout) rootView,
          trackSelectionDialogCancelButton, trackSelectionDialogOkButton,
          trackSelectionDialogTabLayout, trackSelectionDialogViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
